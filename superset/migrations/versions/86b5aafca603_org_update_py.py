# Licensed to the Apache Software Foundation (ASF) under one
# or more contributor license agreements.  See the NOTICE file
# distributed with this work for additional information
# regarding copyright ownership.  The ASF licenses this file
# to you under the Apache License, Version 2.0 (the
# "License"); you may not use this file except in compliance
# with the License.  You may obtain a copy of the License at
#
#   http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing,
# software distributed under the License is distributed on an
# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
# KIND, either express or implied.  See the License for the
# specific language governing permissions and limitations
# under the License.
"""org_update.py

Revision ID: 86b5aafca603
Revises: 8d49a37823bf
Create Date: 2019-03-04 16:17:32.385574

"""

# revision identifiers, used by Alembic.
revision = '86b5aafca603'
down_revision = '8d49a37823bf'

from alembic import op
import sqlalchemy as sa


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('organizations',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('organization_name', sa.String(length=250), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('ab_register_user_all',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('first_name', sa.String(length=64), nullable=False),
    sa.Column('last_name', sa.String(length=64), nullable=False),
    sa.Column('password', sa.String(length=256), nullable=True),
    sa.Column('email', sa.String(length=64), nullable=False),
    sa.Column('registration_date', sa.DateTime(), nullable=True),
    sa.Column('registration_hash', sa.String(length=256), nullable=True),
    sa.Column('organization', sa.String(length=250), nullable=False),
    sa.Column('inviter_id', sa.Integer(), nullable=True),
    sa.Column('valid_date', sa.DateTime(), nullable=True),
    sa.Column('role_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['inviter_id'], ['ab_user.id'], ),
    sa.ForeignKeyConstraint(['role_id'], ['ab_role.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('org_user',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('org_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['org_id'], ['organizations.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['ab_user.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('user_id', 'org_id')
    )

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column('url', 'created_on',
               existing_type=sa.DATETIME(),
               nullable=False)
    op.alter_column('url', 'changed_on',
               existing_type=sa.DATETIME(),
               nullable=False)
    op.alter_column('tables', 'created_on',
               existing_type=sa.DATETIME(),
               nullable=False)
    op.alter_column('tables', 'changed_on',
               existing_type=sa.DATETIME(),
               nullable=False)
    op.drop_constraint(None, 'table_columns', type_='unique')
    op.alter_column('table_columns', 'created_on',
               existing_type=sa.DATETIME(),
               nullable=False)
    op.alter_column('table_columns', 'changed_on',
               existing_type=sa.DATETIME(),
               nullable=False)
    op.drop_constraint(None, 'sql_metrics', type_='unique')
    op.alter_column('sql_metrics', 'created_on',
               existing_type=sa.DATETIME(),
               nullable=False)
    op.alter_column('sql_metrics', 'changed_on',
               existing_type=sa.DATETIME(),
               nullable=False)
    op.alter_column('slices', 'created_on',
               existing_type=sa.DATETIME(),
               nullable=False)
    op.alter_column('slices', 'changed_on',
               existing_type=sa.DATETIME(),
               nullable=False)
    op.drop_constraint(None, 'metrics', type_='foreignkey')
    op.drop_constraint(None, 'metrics', type_='foreignkey')
    op.drop_constraint(None, 'dbs', type_='unique')
    op.alter_column('dbs', 'created_on',
               existing_type=sa.DATETIME(),
               nullable=False)
    op.alter_column('dbs', 'changed_on',
               existing_type=sa.DATETIME(),
               nullable=False)
    op.alter_column('dbs', 'allow_csv_upload',
               existing_type=sa.BOOLEAN(),
               nullable=False,
               existing_server_default=sa.text('1'))
    op.drop_constraint(None, 'datasources', type_='foreignkey')
    op.alter_column('datasources', 'created_on',
               existing_type=sa.DATETIME(),
               nullable=False)
    op.alter_column('datasources', 'changed_on',
               existing_type=sa.DATETIME(),
               nullable=False)
    op.drop_constraint(None, 'dashboards', type_='unique')
    op.alter_column('dashboards', 'created_on',
               existing_type=sa.DATETIME(),
               nullable=False)
    op.alter_column('dashboards', 'changed_on',
               existing_type=sa.DATETIME(),
               nullable=False)
    op.alter_column('css_templates', 'created_on',
               existing_type=sa.DATETIME(),
               nullable=False)
    op.alter_column('css_templates', 'changed_on',
               existing_type=sa.DATETIME(),
               nullable=False)
    op.alter_column('columns', 'created_on',
               existing_type=sa.DATETIME(),
               nullable=False)
    op.alter_column('columns', 'changed_on',
               existing_type=sa.DATETIME(),
               nullable=False)
    op.drop_constraint(None, 'clusters', type_='unique')
    op.alter_column('clusters', 'created_on',
               existing_type=sa.DATETIME(),
               nullable=False)
    op.alter_column('clusters', 'changed_on',
               existing_type=sa.DATETIME(),
               nullable=False)
    op.drop_table('org_user')
    op.drop_table('ab_register_user_all')
    op.drop_table('organizations')
    # ### end Alembic commands ###
