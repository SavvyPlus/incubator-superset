# Licensed to the Apache Software Foundation (ASF) under one
# or more contributor license agreements.  See the NOTICE file
# distributed with this work for additional information
# regarding copyright ownership.  The ASF licenses this file
# to you under the Apache License, Version 2.0 (the
# "License"); you may not use this file except in compliance
# with the License.  You may obtain a copy of the License at
#
#   http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing,
# software distributed under the License is distributed on an
# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
# KIND, either express or implied.  See the License for the
# specific language governing permissions and limitations
# under the License.
"""add user address info

Revision ID: aba24d4f58ec
Revises: a368b4eae2d3
Create Date: 2020-04-28 13:34:13.223915

"""

# revision identifiers, used by Alembic.
revision = 'aba24d4f58ec'
down_revision = 'a368b4eae2d3'

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import mysql

def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    # TODO this is to make up the passed updates
    # op.create_table('team_role',
    # sa.Column('id', sa.Integer(), nullable=False),
    # sa.Column('team_id', sa.Integer(), nullable=True),
    # sa.Column('role_id', sa.Integer(), nullable=True),
    # sa.ForeignKeyConstraint(['role_id'], ['ab_role.id'], ),
    # sa.ForeignKeyConstraint(['team_id'], ['team.id'], ),
    # sa.PrimaryKeyConstraint('id'),
    # sa.UniqueConstraint('team_id', 'role_id')
    # )
    # op.create_table('team_subscription',
    # sa.Column('id', sa.Integer(), nullable=False),
    # sa.Column('team_id', sa.Integer(), nullable=False),
    # sa.Column('plan_id', sa.Integer(), nullable=False),
    # sa.Column('remain_count', sa.Integer(), nullable=True),
    # sa.Column('stripe_sub_id', sa.String(length=64), nullable=True),
    # sa.Column('end_time', sa.Integer(), nullable=True),
    # sa.ForeignKeyConstraint(['plan_id'], ['ab_plan.id'], ),
    # sa.ForeignKeyConstraint(['team_id'], ['team.id'], ),
    # sa.PrimaryKeyConstraint('id')
    # )
    # op.create_table('ab_permission_view_role',
    # sa.Column('id', sa.Integer(), nullable=False),
    # sa.Column('permission_view_id', sa.Integer(), nullable=True),
    # sa.Column('role_id', sa.Integer(), nullable=True),
    # sa.ForeignKeyConstraint(['permission_view_id'], ['ab_permission_view.id'], ),
    # sa.ForeignKeyConstraint(['role_id'], ['ab_role.id'], ),
    # sa.PrimaryKeyConstraint('id'),
    # sa.UniqueConstraint('permission_view_id', 'role_id')
    # )
    # op.create_table('team_role_user',
    # sa.Column('id', sa.Integer(), nullable=False),
    # sa.Column('team_role_id', sa.Integer(), nullable=True),
    # sa.Column('user_id', sa.Integer(), nullable=True),
    # sa.ForeignKeyConstraint(['team_role_id'], ['team_role.id'], ),
    # sa.ForeignKeyConstraint(['user_id'], ['ab_user.id'], ),
    # sa.PrimaryKeyConstraint('id'),
    # sa.UniqueConstraint('team_role_id', 'user_id')
    # )
    op.add_column('ab_user', sa.Column('about_me', sa.Text(), nullable=True))
    op.add_column('ab_user', sa.Column('address', sa.Text(), nullable=True))
    op.add_column('ab_user', sa.Column('city', sa.Text(), nullable=True))
    op.add_column('ab_user', sa.Column('country', sa.Text(), nullable=True))
    op.add_column('ab_user', sa.Column('postal_code', sa.Text(), nullable=True))
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###

    op.drop_column('ab_user', 'postal_code')
    op.drop_column('ab_user', 'country')
    op.drop_column('ab_user', 'city')
    op.drop_column('ab_user', 'address')
    op.drop_column('ab_user', 'about_me')
    # op.drop_table('team_role_user')
    # op.drop_table('ab_permission_view_role')
    # op.drop_table('team_subscription')
    # op.drop_table('team_role')
    # ### end Alembic commands ###
