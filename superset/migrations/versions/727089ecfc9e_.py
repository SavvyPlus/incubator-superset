# Licensed to the Apache Software Foundation (ASF) under one
# or more contributor license agreements.  See the NOTICE file
# distributed with this work for additional information
# regarding copyright ownership.  The ASF licenses this file
# to you under the Apache License, Version 2.0 (the
# "License"); you may not use this file except in compliance
# with the License.  You may obtain a copy of the License at
#
#   http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing,
# software distributed under the License is distributed on an
# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
# KIND, either express or implied.  See the License for the
# specific language governing permissions and limitations
# under the License.
"""empty message

Revision ID: 727089ecfc9e
Revises: 86b5aafca603
Create Date: 2019-03-08 20:14:06.651050

"""

# revision identifiers, used by Alembic.
revision = '727089ecfc9e'
down_revision = '86b5aafca603'

from alembic import op
import sqlalchemy as sa


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('ab_register_user', sa.Column('organization', sa.String(length=250), nullable=False))
    op.add_column('ab_register_user', sa.Column('role_id', sa.Integer(), nullable=True))
    op.add_column('ab_register_user', sa.Column('valid_date', sa.DateTime(), nullable=True))
    op.alter_column('ab_register_user', 'first_name',
               existing_type=sa.VARCHAR(length=64),
               nullable=True)
    op.alter_column('ab_register_user', 'last_name',
               existing_type=sa.VARCHAR(length=64),
               nullable=True)
    op.create_foreign_key(None, 'ab_register_user', 'ab_role', ['role_id'], ['id'])
    op.create_foreign_key(None, 'ab_register_user', 'ab_user', ['inviter_id'], ['id'])
    op.alter_column('clusters', 'changed_on',
               existing_type=sa.DATETIME(),
               nullable=True)
    op.alter_column('clusters', 'created_on',
               existing_type=sa.DATETIME(),
               nullable=True)
    op.create_unique_constraint(None, 'clusters', ['verbose_name'])
    op.alter_column('columns', 'changed_on',
               existing_type=sa.DATETIME(),
               nullable=True)
    op.alter_column('columns', 'created_on',
               existing_type=sa.DATETIME(),
               nullable=True)
    op.alter_column('css_templates', 'changed_on',
               existing_type=sa.DATETIME(),
               nullable=True)
    op.alter_column('css_templates', 'created_on',
               existing_type=sa.DATETIME(),
               nullable=True)
    op.alter_column('dashboards', 'changed_on',
               existing_type=sa.DATETIME(),
               nullable=True)
    op.alter_column('dashboards', 'created_on',
               existing_type=sa.DATETIME(),
               nullable=True)
    op.create_unique_constraint(None, 'dashboards', ['slug'])
    op.alter_column('datasources', 'changed_on',
               existing_type=sa.DATETIME(),
               nullable=True)
    op.alter_column('datasources', 'created_on',
               existing_type=sa.DATETIME(),
               nullable=True)
    op.alter_column('dbs', 'allow_csv_upload',
               existing_type=sa.BOOLEAN(),
               nullable=True,
               existing_server_default=sa.text('1'))
    op.alter_column('dbs', 'changed_on',
               existing_type=sa.DATETIME(),
               nullable=True)
    op.alter_column('dbs', 'created_on',
               existing_type=sa.DATETIME(),
               nullable=True)
    op.create_unique_constraint(None, 'dbs', ['verbose_name'])
    op.create_foreign_key(None, 'metrics', 'ab_user', ['created_by_fk'], ['id'])
    op.create_foreign_key(None, 'metrics', 'ab_user', ['changed_by_fk'], ['id'])
    op.alter_column('slices', 'changed_on',
               existing_type=sa.DATETIME(),
               nullable=True)
    op.alter_column('slices', 'created_on',
               existing_type=sa.DATETIME(),
               nullable=True)
    op.alter_column('sql_metrics', 'changed_on',
               existing_type=sa.DATETIME(),
               nullable=True)
    op.alter_column('sql_metrics', 'created_on',
               existing_type=sa.DATETIME(),
               nullable=True)
    op.create_unique_constraint(None, 'sql_metrics', ['table_id', 'metric_name'])
    op.alter_column('table_columns', 'changed_on',
               existing_type=sa.DATETIME(),
               nullable=True)
    op.alter_column('table_columns', 'created_on',
               existing_type=sa.DATETIME(),
               nullable=True)
    op.create_unique_constraint(None, 'table_columns', ['table_id', 'column_name'])
    op.alter_column('tables', 'changed_on',
               existing_type=sa.DATETIME(),
               nullable=True)
    op.alter_column('tables', 'created_on',
               existing_type=sa.DATETIME(),
               nullable=True)
    op.alter_column('url', 'changed_on',
               existing_type=sa.DATETIME(),
               nullable=True)
    op.alter_column('url', 'created_on',
               existing_type=sa.DATETIME(),
               nullable=True)
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column('url', 'created_on',
               existing_type=sa.DATETIME(),
               nullable=False)
    op.alter_column('url', 'changed_on',
               existing_type=sa.DATETIME(),
               nullable=False)
    op.alter_column('tables', 'created_on',
               existing_type=sa.DATETIME(),
               nullable=False)
    op.alter_column('tables', 'changed_on',
               existing_type=sa.DATETIME(),
               nullable=False)
    op.drop_constraint(None, 'table_columns', type_='unique')
    op.alter_column('table_columns', 'created_on',
               existing_type=sa.DATETIME(),
               nullable=False)
    op.alter_column('table_columns', 'changed_on',
               existing_type=sa.DATETIME(),
               nullable=False)
    op.drop_constraint(None, 'sql_metrics', type_='unique')
    op.alter_column('sql_metrics', 'created_on',
               existing_type=sa.DATETIME(),
               nullable=False)
    op.alter_column('sql_metrics', 'changed_on',
               existing_type=sa.DATETIME(),
               nullable=False)
    op.alter_column('slices', 'created_on',
               existing_type=sa.DATETIME(),
               nullable=False)
    op.alter_column('slices', 'changed_on',
               existing_type=sa.DATETIME(),
               nullable=False)
    op.drop_constraint(None, 'metrics', type_='foreignkey')
    op.drop_constraint(None, 'metrics', type_='foreignkey')
    op.drop_constraint(None, 'dbs', type_='unique')
    op.alter_column('dbs', 'created_on',
               existing_type=sa.DATETIME(),
               nullable=False)
    op.alter_column('dbs', 'changed_on',
               existing_type=sa.DATETIME(),
               nullable=False)
    op.alter_column('dbs', 'allow_csv_upload',
               existing_type=sa.BOOLEAN(),
               nullable=False,
               existing_server_default=sa.text('1'))
    op.alter_column('datasources', 'created_on',
               existing_type=sa.DATETIME(),
               nullable=False)
    op.alter_column('datasources', 'changed_on',
               existing_type=sa.DATETIME(),
               nullable=False)
    op.drop_constraint(None, 'dashboards', type_='unique')
    op.alter_column('dashboards', 'created_on',
               existing_type=sa.DATETIME(),
               nullable=False)
    op.alter_column('dashboards', 'changed_on',
               existing_type=sa.DATETIME(),
               nullable=False)
    op.alter_column('css_templates', 'created_on',
               existing_type=sa.DATETIME(),
               nullable=False)
    op.alter_column('css_templates', 'changed_on',
               existing_type=sa.DATETIME(),
               nullable=False)
    op.alter_column('columns', 'created_on',
               existing_type=sa.DATETIME(),
               nullable=False)
    op.alter_column('columns', 'changed_on',
               existing_type=sa.DATETIME(),
               nullable=False)
    op.drop_constraint(None, 'clusters', type_='unique')
    op.alter_column('clusters', 'created_on',
               existing_type=sa.DATETIME(),
               nullable=False)
    op.alter_column('clusters', 'changed_on',
               existing_type=sa.DATETIME(),
               nullable=False)
    op.drop_constraint(None, 'ab_register_user', type_='foreignkey')
    op.drop_constraint(None, 'ab_register_user', type_='foreignkey')
    op.alter_column('ab_register_user', 'last_name',
               existing_type=sa.VARCHAR(length=64),
               nullable=False)
    op.alter_column('ab_register_user', 'first_name',
               existing_type=sa.VARCHAR(length=64),
               nullable=False)
    op.drop_column('ab_register_user', 'valid_date')
    op.drop_column('ab_register_user', 'role_id')
    op.drop_column('ab_register_user', 'organization')
    # ### end Alembic commands ###
