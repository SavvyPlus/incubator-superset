# Licensed to the Apache Software Foundation (ASF) under one
# or more contributor license agreements.  See the NOTICE file
# distributed with this work for additional information
# regarding copyright ownership.  The ASF licenses this file
# to you under the Apache License, Version 2.0 (the
# "License"); you may not use this file except in compliance
# with the License.  You may obtain a copy of the License at
#
#   http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing,
# software distributed under the License is distributed on an
# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
# KIND, either express or implied.  See the License for the
# specific language governing permissions and limitations
# under the License.
"""update simulation models for job request

Revision ID: 3ea653b5d694
Revises: 38e2686dcf99
Create Date: 2020-05-28 13:28:38.799582

"""

# revision identifiers, used by Alembic.
revision = '3ea653b5d694'
down_revision = '38e2686dcf99'

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import mysql

def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('job_type',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=128), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_table('region',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=8), nullable=False),
    sa.Column('sql_repr', sa.String(length=8), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_table('project_jobtype',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('project_id', sa.Integer(), nullable=True),
    sa.Column('jobtype_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['jobtype_id'], ['job_type.id'], ),
    sa.ForeignKeyConstraint(['project_id'], ['project.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('project_region',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('project_id', sa.Integer(), nullable=True),
    sa.Column('region_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['project_id'], ['project.id'], ),
    sa.ForeignKeyConstraint(['region_id'], ['region.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('simulation_jobtype',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('simulation_id', sa.Integer(), nullable=True),
    sa.Column('jobtype_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['jobtype_id'], ['job_type.id'], ),
    sa.ForeignKeyConstraint(['simulation_id'], ['simulation.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.add_column('project', sa.Column('due_date', sa.Date(), nullable=True))
    op.create_unique_constraint(None, 'simulation', ['name'])
    op.drop_column('simulation', 'report_type')
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('simulation', sa.Column('report_type', mysql.VARCHAR(length=200), nullable=True))
    op.drop_constraint(None, 'simulation', type_='unique')
    op.drop_column('project', 'due_date')
    op.drop_table('simulation_jobtype')
    op.drop_table('project_region')
    op.drop_table('project_jobtype')
    op.drop_table('region')
    op.drop_table('job_type')
    # ### end Alembic commands ###
