# Licensed to the Apache Software Foundation (ASF) under one
# or more contributor license agreements.  See the NOTICE file
# distributed with this work for additional information
# regarding copyright ownership.  The ASF licenses this file
# to you under the Apache License, Version 2.0 (the
# "License"); you may not use this file except in compliance
# with the License.  You may obtain a copy of the License at
#
#   http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing,
# software distributed under the License is distributed on an
# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
# KIND, either express or implied.  See the License for the
# specific language governing permissions and limitations
# under the License.
"""new assumption model

Revision ID: 761b12863538
Revises: a72cb0ebeb22
Create Date: 2020-07-03 13:06:41.135156

"""

# revision identifiers, used by Alembic.
revision = '761b12863538'
down_revision = 'a72cb0ebeb22'

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import mysql

def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('Behind_The_Meter_Battery_Definition',
    sa.Column('Behind_The_Meter_Battery_Version', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('Note', sa.String(length=512), nullable=True),
    sa.Column('Assumption_Scenario', sa.String(length=50), nullable=True),
    sa.Column('Assumption_Scenario_Version', sa.Integer(), nullable=True),
    sa.PrimaryKeyConstraint('Behind_The_Meter_Battery_Version')
    )
    op.create_table('Demand_Growth_Definition',
    sa.Column('Demand_Growth_Version', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('Note', sa.String(length=512), nullable=True),
    sa.Column('Assumption_Scenario', sa.String(length=50), nullable=True),
    sa.Column('Assumption_Scenario_Version', sa.Integer(), nullable=True),
    sa.PrimaryKeyConstraint('Demand_Growth_Version')
    )
    op.create_table('Gas_Price_Escalation_Definition',
    sa.Column('Gas_Price_Escalation_Version', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('Note', sa.String(length=512), nullable=True),
    sa.PrimaryKeyConstraint('Gas_Price_Escalation_Version')
    )
    op.create_table('MPC_CPT_Definition',
    sa.Column('MPC_CPT_Version', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('Note', sa.String(length=512), nullable=True),
    sa.PrimaryKeyConstraint('MPC_CPT_Version')
    )
    op.create_table('Project_List_Definition',
    sa.Column('Project_List_Version', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('Note', sa.String(length=512), nullable=True),
    sa.PrimaryKeyConstraint('Project_List_Version')
    )
    op.create_table('Project_Proxy_Definition',
    sa.Column('Project_Proxy_Version', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('Note', sa.String(length=512), nullable=True),
    sa.PrimaryKeyConstraint('Project_Proxy_Version')
    )
    op.create_table('Renewable_Proportion_Definition',
    sa.Column('Renewable_Proportion_Version', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('Note', sa.String(length=512), nullable=True),
    sa.PrimaryKeyConstraint('Renewable_Proportion_Version')
    )
    op.create_table('Retirement_Definition',
    sa.Column('Retirement_Version', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('Note', sa.String(length=512), nullable=True),
    sa.PrimaryKeyConstraint('Retirement_Version')
    )
    op.create_table('Rooftop_Solar_Forecast_Definition',
    sa.Column('Rooftop_Solar_Forecast_Version', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('Note', sa.String(length=512), nullable=True),
    sa.Column('Assumption_Scenario', sa.String(length=50), nullable=True),
    sa.Column('Assumption_Scenario_Version', sa.Integer(), nullable=True),
    sa.PrimaryKeyConstraint('Rooftop_Solar_Forecast_Version')
    )
    op.create_table('Rooftop_Solar_History_Definition',
    sa.Column('Rooftop_Solar_History_Version', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('Note', sa.String(length=512), nullable=True),
    sa.PrimaryKeyConstraint('Rooftop_Solar_History_Version')
    )
    op.create_table('Strategic_Behaviour_Definition',
    sa.Column('Strategic_Behaviour_Version', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('Note', sa.String(length=512), nullable=True),
    sa.PrimaryKeyConstraint('Strategic_Behaviour_Version')
    )
    op.create_table('Assumption_Definition',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('Name', sa.String(length=20), nullable=True),
    sa.Column('Note', sa.String(length=512), nullable=True),
    sa.Column('Rooftop_Solar_History_Version', sa.Integer(), nullable=True),
    sa.Column('Rooftop_Solar_Forecast_Version', sa.Integer(), nullable=True),
    sa.Column('Renewable_Proportion_Version', sa.Integer(), nullable=True),
    sa.Column('Demand_Growth_Version', sa.Integer(), nullable=True),
    sa.Column('Behind_The_Meter_Battery_Version', sa.Integer(), nullable=True),
    sa.Column('Project_Proxy_Version', sa.Integer(), nullable=True),
    sa.Column('MPC_CPT_Version', sa.Integer(), nullable=True),
    sa.Column('Gas_Price_Escalation_Version', sa.Integer(), nullable=True),
    sa.Column('Strategic_Behaviour_Version', sa.Integer(), nullable=True),
    sa.Column('Retirement_Version', sa.Integer(), nullable=True),
    sa.Column('Project_List_Version', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['Behind_The_Meter_Battery_Version'], ['Behind_The_Meter_Battery_Definition.Behind_The_Meter_Battery_Version'], ),
    sa.ForeignKeyConstraint(['Demand_Growth_Version'], ['Demand_Growth_Definition.Demand_Growth_Version'], ),
    sa.ForeignKeyConstraint(['Gas_Price_Escalation_Version'], ['Gas_Price_Escalation_Definition.Gas_Price_Escalation_Version'], ),
    sa.ForeignKeyConstraint(['MPC_CPT_Version'], ['MPC_CPT_Definition.MPC_CPT_Version'], ),
    sa.ForeignKeyConstraint(['Project_List_Version'], ['Project_List_Definition.Project_List_Version'], ),
    sa.ForeignKeyConstraint(['Project_Proxy_Version'], ['Project_Proxy_Definition.Project_Proxy_Version'], ),
    sa.ForeignKeyConstraint(['Renewable_Proportion_Version'], ['Renewable_Proportion_Definition.Renewable_Proportion_Version'], ),
    sa.ForeignKeyConstraint(['Retirement_Version'], ['Retirement_Definition.Retirement_Version'], ),
    sa.ForeignKeyConstraint(['Rooftop_Solar_Forecast_Version'], ['Rooftop_Solar_Forecast_Definition.Rooftop_Solar_Forecast_Version'], ),
    sa.ForeignKeyConstraint(['Rooftop_Solar_History_Version'], ['Rooftop_Solar_History_Definition.Rooftop_Solar_History_Version'], ),
    sa.ForeignKeyConstraint(['Strategic_Behaviour_Version'], ['Strategic_Behaviour_Definition.Strategic_Behaviour_Version'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('Behind_The_Meter_Battery',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('State', sa.String(length=10), nullable=True),
    sa.Column('Year', sa.Integer(), nullable=True),
    sa.Column('Aggregate_MW', sa.Float(), nullable=True),
    sa.Column('Behind_The_Meter_Battery_Version', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['Behind_The_Meter_Battery_Version'], ['Behind_The_Meter_Battery_Definition.Behind_The_Meter_Battery_Version'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('Demand_Growth',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('State', sa.String(length=10), nullable=True),
    sa.Column('Year', sa.Integer(), nullable=True),
    sa.Column('Probability', sa.Float(), nullable=True),
    sa.Column('Growth', sa.Float(), nullable=True),
    sa.Column('Demand_Growth_Version', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['Demand_Growth_Version'], ['Demand_Growth_Definition.Demand_Growth_Version'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('Gas_Price_Escalation',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('State', sa.String(length=10), nullable=True),
    sa.Column('Year', sa.Integer(), nullable=True),
    sa.Column('Case1', sa.Float(), nullable=True),
    sa.Column('Case2', sa.Float(), nullable=True),
    sa.Column('Case3', sa.Float(), nullable=True),
    sa.Column('Case4', sa.Float(), nullable=True),
    sa.Column('Case5', sa.Float(), nullable=True),
    sa.Column('Case6', sa.Float(), nullable=True),
    sa.Column('Case7', sa.Float(), nullable=True),
    sa.Column('Case8', sa.Float(), nullable=True),
    sa.Column('Case9', sa.Float(), nullable=True),
    sa.Column('Gas_Price_Escalation_Version', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['Gas_Price_Escalation_Version'], ['Gas_Price_Escalation_Definition.Gas_Price_Escalation_Version'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('MPC_CPT',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('FY', sa.String(length=10), nullable=True),
    sa.Column('CPT', sa.Float(), nullable=True),
    sa.Column('MPC', sa.Float(), nullable=True),
    sa.Column('MPC_CPT_Version', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['MPC_CPT_Version'], ['MPC_CPT_Definition.MPC_CPT_Version'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('Project_List',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('DUID', sa.String(length=50), nullable=True),
    sa.Column('Name', sa.String(length=50), nullable=True),
    sa.Column('State', sa.String(length=10), nullable=True),
    sa.Column('Fuel_Type', sa.String(length=10), nullable=True),
    sa.Column('Start_Date', sa.Date(), nullable=True),
    sa.Column('End_Date', sa.Date(), nullable=True),
    sa.Column('Status', sa.String(length=50), nullable=True),
    sa.Column('Offer_Rate', sa.Float(), nullable=True),
    sa.Column('Maximum_Quantity', sa.Float(), nullable=True),
    sa.Column('Installed_Quantity', sa.Float(), nullable=True),
    sa.Column('Probability_Of_Success', sa.Float(), nullable=True),
    sa.Column('Resolution', sa.String(length=20), nullable=True),
    sa.Column('Proxy', sa.String(length=50), nullable=True),
    sa.Column('Project_List_Version', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['Project_List_Version'], ['Project_List_Definition.Project_List_Version'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('Project_Proxy',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('State', sa.String(length=10), nullable=True),
    sa.Column('Project', sa.String(length=50), nullable=True),
    sa.Column('Nameplate_Capacity_MW', sa.Float(), nullable=True),
    sa.Column('Technology_Type', sa.String(length=10), nullable=True),
    sa.Column('Latitude', sa.Float(), nullable=True),
    sa.Column('Longitude', sa.Float(), nullable=True),
    sa.Column('Tracking_Type', sa.String(length=50), nullable=True),
    sa.Column('Project_Proxy_Version', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['Project_Proxy_Version'], ['Project_Proxy_Definition.Project_Proxy_Version'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('Renewable_Proportion',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('State', sa.String(length=10), nullable=True),
    sa.Column('Date', sa.Date(), nullable=True),
    sa.Column('Maximum_HalfHour_Intermittent_Proportion', sa.Float(), nullable=True),
    sa.Column('Renewable_Proportion_Version', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['Renewable_Proportion_Version'], ['Renewable_Proportion_Definition.Renewable_Proportion_Version'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('Retirement',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('DUID', sa.String(length=50), nullable=True),
    sa.Column('State', sa.String(length=10), nullable=True),
    sa.Column('Registered_Capacity', sa.Float(), nullable=True),
    sa.Column('Impact_To_State', sa.String(length=10), nullable=True),
    sa.Column('Adjustment_Factor', sa.Float(), nullable=True),
    sa.Column('Closure_Date', sa.Date(), nullable=True),
    sa.Column('Back_To_Service_Date', sa.Date(), nullable=True),
    sa.Column('Retirement_Version', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['Retirement_Version'], ['Retirement_Definition.Retirement_Version'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('Rooftop_Solar_Forecast',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('State', sa.String(length=10), nullable=True),
    sa.Column('Year', sa.Integer(), nullable=True),
    sa.Column('Capacity_MW', sa.Float(), nullable=True),
    sa.Column('Aggregate_MW', sa.Float(), nullable=True),
    sa.Column('Rooftop_Solar_Forecast_Version', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['Rooftop_Solar_Forecast_Version'], ['Rooftop_Solar_Forecast_Definition.Rooftop_Solar_Forecast_Version'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('Rooftop_Solar_History',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('State', sa.String(length=10), nullable=True),
    sa.Column('Date', sa.Date(), nullable=True),
    sa.Column('Capacity_MW', sa.Float(), nullable=True),
    sa.Column('Aggregate_MW', sa.Float(), nullable=True),
    sa.Column('Rooftop_Solar_History_Version', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['Rooftop_Solar_History_Version'], ['Rooftop_Solar_History_Definition.Rooftop_Solar_History_Version'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('Strategic_Behaviour',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('State', sa.String(length=10), nullable=True),
    sa.Column('Bin_Not_Exceeding', sa.Integer(), nullable=True),
    sa.Column('Value', sa.Float(), nullable=True),
    sa.Column('MW', sa.Float(), nullable=True),
    sa.Column('Strategic_Behaviour_Version', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['Strategic_Behaviour_Version'], ['Strategic_Behaviour_Definition.Strategic_Behaviour_Version'], ),
    sa.PrimaryKeyConstraint('id')
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('Strategic_Behaviour')
    op.drop_table('Rooftop_Solar_History')
    op.drop_table('Rooftop_Solar_Forecast')
    op.drop_table('Retirement')
    op.drop_table('Renewable_Proportion')
    op.drop_table('Project_Proxy')
    op.drop_table('Project_List')
    op.drop_table('MPC_CPT')
    op.drop_table('Gas_Price_Escalation')
    op.drop_table('Demand_Growth')
    op.drop_table('Behind_The_Meter_Battery')
    op.drop_table('Assumption_Definition')
    op.drop_table('Strategic_Behaviour_Definition')
    op.drop_table('Rooftop_Solar_History_Definition')
    op.drop_table('Rooftop_Solar_Forecast_Definition')
    op.drop_table('Retirement_Definition')
    op.drop_table('Renewable_Proportion_Definition')
    op.drop_table('Project_Proxy_Definition')
    op.drop_table('Project_List_Definition')
    op.drop_table('MPC_CPT_Definition')
    op.drop_table('Gas_Price_Escalation_Definition')
    op.drop_table('Demand_Growth_Definition')
    op.drop_table('Behind_The_Meter_Battery_Definition')
    # ### end Alembic commands ###
